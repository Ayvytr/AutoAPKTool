<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="no_sign" xml:space="preserve">
    <value>未发现签名文件!</value>
  </data>
  <data name="info" xml:space="preserve">
    <value>提示</value>
  </data>
  <data name="need_signs" xml:space="preserve">
    <value>需要批量签名吗</value>
  </data>
  <data name="no_find_apk" xml:space="preserve">
    <value>未发现apk文件!</value>
  </data>
  <data name="no_find_framework" xml:space="preserve">
    <value>未发现framework框架，请自行将odex所在的手机或模拟器上system下的framework文件夹放在工具箱的tool文件夹下内，请勿重命名!</value>
  </data>
  <data name="no_find_odex" xml:space="preserve">
    <value>未发现odex文件!</value>
  </data>
  <data name="files" xml:space="preserve">
    <value>文件夹|*</value>
  </data>
  <data name="no_find_smali_files" xml:space="preserve">
    <value>未发现smali文件夹!</value>
  </data>
  <data name="dex_files" xml:space="preserve">
    <value>DEX|*.dex|All|*.*</value>
  </data>
  <data name="path" xml:space="preserve">
    <value>路径: {0}</value>
  </data>
  <data name="no_find_dex" xml:space="preserve">
    <value>未发现dex文件!</value>
  </data>
  <data name="no_find_jar" xml:space="preserve">
    <value>未发现jar文件!</value>
  </data>
  <data name="pls_confirm_decompile_package" xml:space="preserve">
    <value>请确认是否已经拖入反编译后的文件夹!</value>
  </data>
  <data name="apk_files" xml:space="preserve">
    <value>APK|*.apk|All|*.*</value>
  </data>
  <data name="need_decompiles" xml:space="preserve">
    <value>需要批量反编译吗</value>
  </data>
  <data name="jar_files" xml:space="preserve">
    <value>Jar|*.jar</value>
  </data>
  <data name="enter" xml:space="preserve">
    <value>
</value>
  </data>
  <data name="pls_config" xml:space="preserve">
    <value>请正确配置</value>
  </data>
  <data name="info_" xml:space="preserve">
    <value>提示</value>
  </data>
  <data name="make_succ" xml:space="preserve">
    <value>生成成功</value>
  </data>
  <data name="support_file" xml:space="preserve">
    <value>支持类型|*.apk;*.jar;*.odex;*.dex</value>
  </data>
  <data name="pls_input_opcode" xml:space="preserve">
    <value>请输入指令哦</value>
  </data>
  <data name="working_hard" xml:space="preserve">
    <value>正在努力执行中...</value>
  </data>
  <data name="pls_make_sure" xml:space="preserve">
    <value>请确认指令是否正确</value>
  </data>
  <data name="convert_expcetion" xml:space="preserve">
    <value>转换出现异常</value>
  </data>
  <data name="complete" xml:space="preserve">
    <value>执行完成</value>
  </data>
  <data name="pls_insure_your_as_path" xml:space="preserve">
    <value>请检测根目录下是否包含as.exe程序</value>
  </data>
</root>